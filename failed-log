[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ [id: 0x8efa3585,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ [id: 0x95a1014c,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x95a1014c, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 280,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH true
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x8efa3585, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ wrapping outbound message
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ node localhost got a plaintext response from localhost
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][ server-ssl-handler: in handlerRemoved0
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x999aceb4, )
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe6cb2bbc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ [id: 0x2e1c739e,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 280,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH true
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x2e1c739e, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2e1c739e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2e1c739e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ [id: 0xd6b7ebc4,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ [id: 0x32224798,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ [id: 0x5aecf5fc,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ [id: 0x9d2cc1dc,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ [id: 0x8e9eb9d0,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ [id: 0x67d1fc9e,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ [id: 0x9d6db6fd,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ [id: 0xa69a617f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ [id: 0x4c1b3b64,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ [id: 0x2a4c51e7,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe6cb2bbc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ [id: 0x87e4acc1,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ [id: 0xdc499bd3,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ [id: 0xe309d901,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe4d4b2f2, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xa69a617f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa69a617f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s1][ in channelRead, invoking callDecode
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe4d4b2f2, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ [id: 0x20666bbd,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x20666bbd, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x20666bbd, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x20666bbd, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x999aceb4, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x48075538, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x4c1b3b64, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x4c1b3b64, )
[node_s1][ [id: 0xd60b529f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s1][ in channelRead, invoking callDecode
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x4c1b3b64, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ [id: 0x720d0369,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x48075538, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ [id: 0x51cf4a7a,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ [id: 0x1d268f7f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ [id: 0xbb0b2cd4,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ [id: 0x6420f9e6,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ [id: 0x77dfab41,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s0][generic][T#2]]] setting initial configuration to VotingConfiguration{7-9q77d_QyOl7eaO7Pyg0A,7ff_2y7VTEGUkOFoegIkJQ}
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x720d0369, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe87e3905, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ wrapping outbound message
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x87e4acc1, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s0][masterService#updateTask][T#1]]] elected-as-master ([2] nodes joined)[{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0} elect leader, {node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0} elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 1, version: 1, reason: master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0},}
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ wrapping outbound message
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x5aecf5fc, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][generic][T#1]]] cluster UUID set to [fe_tFinvT4Ou9jchE-u9eA]
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][generic][T#4]]] cluster UUID set to [fe_tFinvT4Ou9jchE-u9eA]
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][clusterApplierService#updateTask][T#1]]] master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0},}, term: 1, version: 1, reason: ApplyCommitRequest{term=1, version=1, sourceNode={node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}}
[2021-12-22T10:58:52,711][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] started
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][clusterApplierService#updateTask][T#1]]] master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0},}, term: 1, version: 1, reason: Publication{term=1, version=1}
[2021-12-22T10:58:52,719][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] started
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x87e4acc1, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe87e3905, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][masterService#updateTask][T#1]]] recovered [0] indices into cluster_state
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x1900e373, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xdc499bd3, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xdc499bd3, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x1900e373, )
[node_s0][masterService#updateTask][T#1]]] adding template [random_index_template] for index patterns [*]
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[2021-12-22T10:58:53,069][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] [SSLTrustedZoneITest#test_switch_to_plaintext_enabled_downgrades_to_plaintext]: all set up test
[2021-12-22T10:58:53,499][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] [SSLTrustedZoneITest#test_switch_to_plaintext_enabled_downgrades_to_plaintext]: cleaning up after test
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x89b87417, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xe309d901, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe309d901, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe309d901, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x89b87417, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8db3243a, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x9d6db6fd, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x9d6db6fd, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[2021-12-22T10:59:00,815][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] after test
REPRODUCE WITH: ./gradlew :server:test -Dtests.seed=609F887A9B59B7F6 -Dtests.class=io.crate.integrationtests.SSLTrustedZoneITest -Dtests.nightly=true -Dtests.method="test_switch_to_plaintext_enabled_downgrades_to_plaintext" -Dtests.nightly=true -Dtests.locale=kl-Latn-GL -Dtests.timezone=Australia/Sydney
## FAILURE: Test test_switch_to_plaintext_enabled_downgrades_to_plaintext(io.crate.integrationtests.SSLTrustedZoneITest)
[2021-12-22T10:58:47,815][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] before test
[2021-12-22T10:58:47,827][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] [SSLTrustedZoneITest#test_switch_to_plaintext_enabled_downgrades_to_plaintext]: setting up test
[2021-12-22T10:58:47,850][INFO ][o.e.t.InternalTestCluster] [[Time-limited test]] Setup InternalTestCluster [SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster] with seed [1D64854B672968F9] using [0] dedicated masters, [2] (data) nodes and [0] coord only nodes (master nodes are [auto-managed])
[2021-12-22T10:58:48,101][INFO ][o.e.e.NodeEnvironment    ] [[Time-limited test]] using [3] data paths, mounts [[/System/Volumes/Data (/dev/disk1s1)]], net usable_space [235gb], net total_space [465.6gb], types [apfs]
[2021-12-22T10:58:48,101][INFO ][o.e.e.NodeEnvironment    ] [[Time-limited test]] heap size [1gb], compressed ordinary object pointers [true]
[2021-12-22T10:58:48,182][INFO ][o.e.n.Node               ] [[Time-limited test]] node name [node_s0], node ID [7-9q77d_QyOl7eaO7Pyg0A], cluster name [SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster]
[2021-12-22T10:58:48,186][INFO ][o.e.n.Node               ] [[Time-limited test]] version[4.7.0-SNAPSHOT], pid[1465], build[NA/NA], OS[Mac OS X/11.2/x86_64], JVM[Eclipse Adoptium/OpenJDK 64-Bit Server VM/17/17+35]
 and is not suitable for production
[2021-12-22T10:58:48,203][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] no modules loaded
[2021-12-22T10:58:48,204][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.index.MockEngineFactoryPlugin]
[2021-12-22T10:58:48,204][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.index.mapper.MockFieldFilterPlugin]
[2021-12-22T10:58:48,204][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.test.ESIntegTestCase$TestSeedPlugin]
[2021-12-22T10:58:48,205][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.test.MockHttpTransport$TestPlugin]
[2021-12-22T10:58:48,205][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.transport.Netty4Plugin]
[2021-12-22T10:58:49,212][INFO ][o.e.d.DiscoveryModule    ] [[Time-limited test]] using discovery type [zen] and seed hosts providers [settings, file]
[2021-12-22T10:58:50,063][INFO ][psql                     ] [[Time-limited test]] PSQL SSL support is disabled.
[2021-12-22T10:58:50,185][INFO ][i.c.n.c.PipelineRegistry ] [[Time-limited test]] HTTP SSL support is disabled.
[2021-12-22T10:58:50,218][INFO ][o.e.n.Node               ] [[Time-limited test]] initialized
[2021-12-22T10:58:50,224][INFO ][o.e.e.NodeEnvironment    ] [[Time-limited test]] using [3] data paths, mounts [[/System/Volumes/Data (/dev/disk1s1)]], net usable_space [235gb], net total_space [465.6gb], types [apfs]
[2021-12-22T10:58:50,224][INFO ][o.e.e.NodeEnvironment    ] [[Time-limited test]] heap size [1gb], compressed ordinary object pointers [true]
[2021-12-22T10:58:50,227][INFO ][o.e.n.Node               ] [[Time-limited test]] node name [node_s1], node ID [7ff_2y7VTEGUkOFoegIkJQ], cluster name [SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster]
[2021-12-22T10:58:50,228][INFO ][o.e.n.Node               ] [[Time-limited test]] version[4.7.0-SNAPSHOT], pid[1465], build[NA/NA], OS[Mac OS X/11.2/x86_64], JVM[Eclipse Adoptium/OpenJDK 64-Bit Server VM/17/17+35]
 and is not suitable for production
[2021-12-22T10:58:50,228][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] no modules loaded
[2021-12-22T10:58:50,229][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.index.MockEngineFactoryPlugin]
[2021-12-22T10:58:50,229][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.index.mapper.MockFieldFilterPlugin]
[2021-12-22T10:58:50,229][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.test.ESIntegTestCase$TestSeedPlugin]
[2021-12-22T10:58:50,229][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.test.MockHttpTransport$TestPlugin]
[2021-12-22T10:58:50,229][INFO ][o.e.p.PluginsService     ] [[Time-limited test]] loaded plugin [org.elasticsearch.transport.Netty4Plugin]
[2021-12-22T10:58:50,243][INFO ][o.e.d.DiscoveryModule    ] [[Time-limited test]] using discovery type [zen] and seed hosts providers [settings, file]
[2021-12-22T10:58:50,276][INFO ][psql                     ] [[Time-limited test]] PSQL SSL support is disabled.
[2021-12-22T10:58:50,284][INFO ][i.c.n.c.PipelineRegistry ] [[Time-limited test]] HTTP SSL support is disabled.
[2021-12-22T10:58:50,288][INFO ][o.e.n.Node               ] [[Time-limited test]] initialized
[2021-12-22T10:58:50,291][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] starting ...
[2021-12-22T10:58:50,291][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] starting ...
[2021-12-22T10:58:50,520][INFO ][psql                     ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] publish_address {127.0.0.1:50863}, bound_addresses {[::1]:50861}, {127.0.0.1:50863}
[2021-12-22T10:58:50,520][INFO ][psql                     ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] publish_address {127.0.0.1:50864}, bound_addresses {[::1]:50862}, {127.0.0.1:50864}
[2021-12-22T10:58:50,545][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] using profile[default], port[0], bind_host[[]], publish_host[[]], receive_predictor[64kb->64kb]
[2021-12-22T10:58:50,545][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] using profile[default], port[0], bind_host[[]], publish_host[[]], receive_predictor[64kb->64kb]
[2021-12-22T10:58:50,548][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] binding server bootstrap to: [::1, 127.0.0.1]
[2021-12-22T10:58:50,548][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] binding server bootstrap to: [::1, 127.0.0.1]
[2021-12-22T10:58:50,552][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] Bound profile [default] to address {[::1]:50865}
[2021-12-22T10:58:50,552][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] Bound profile [default] to address {[::1]:50866}
[2021-12-22T10:58:50,553][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] Bound profile [default] to address {127.0.0.1:50867}
[2021-12-22T10:58:50,553][DEBUG][o.e.t.n.Netty4Transport  ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] Bound profile [default] to address {127.0.0.1:50868}
[2021-12-22T10:58:50,555][INFO ][o.e.t.TransportService   ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] publish_address {127.0.0.1:50867}, bound_addresses {[::1]:50865}, {127.0.0.1:50867}
[2021-12-22T10:58:50,555][INFO ][o.e.t.TransportService   ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] publish_address {127.0.0.1:50868}, bound_addresses {[::1]:50866}, {127.0.0.1:50868}
[node_s0][generic][T#2]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#2]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ [id: 0x8efa3585,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ [id: 0x95a1014c,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x95a1014c, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 280,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH true
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x8efa3585, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ wrapping outbound message
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8efa3585, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ node localhost got a plaintext response from localhost
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8efa3585, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x95a1014c, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x6615c506, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x88a337c3, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x95a1014c, )
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s0][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][generic][T#4]]] Tcp transport client channel opened: Netty4TcpChannel{localAddress=null, 
[node_s1][ server-ssl-handler: in handlerRemoved0
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x999aceb4, )
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50868, 
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe6cb2bbc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ [id: 0x2e1c739e,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 280,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH true
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x2e1c739e, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2e1c739e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2e1c739e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2e1c739e, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ [id: 0xd6b7ebc4,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd6b7ebc4, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ [id: 0x32224798,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x32224798, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ [id: 0x5aecf5fc,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ [id: 0x9d2cc1dc,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d2cc1dc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ [id: 0x8e9eb9d0,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x8e9eb9d0, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ [id: 0x67d1fc9e,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x67d1fc9e, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ [id: 0x9d6db6fd,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ [id: 0xa69a617f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s0][ [id: 0x4c1b3b64,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ [id: 0x2a4c51e7,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x2a4c51e7, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe6cb2bbc, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ [id: 0x87e4acc1,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ [id: 0xdc499bd3,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ [id: 0xe309d901,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s0][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe4d4b2f2, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xa69a617f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa69a617f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa69a617f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xa69a617f, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s1][ in channelRead, invoking callDecode
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe4d4b2f2, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ [id: 0x20666bbd,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x20666bbd, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x20666bbd, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x20666bbd, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x20666bbd, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x999aceb4, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x48075538, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x4c1b3b64, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x4c1b3b64, )
[node_s1][ [id: 0xd60b529f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x4c1b3b64, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s1][ in channelRead, invoking callDecode
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x4c1b3b64, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ [id: 0x720d0369,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x48075538, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ [id: 0x51cf4a7a,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ Tcp transport channel accepted: Netty4TcpChannel{localAddress=/127.0.0.1:50867, 
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ [id: 0x1d268f7f,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x1d268f7f, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ [id: 0xbb0b2cd4,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xbb0b2cd4, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ [id: 0x6420f9e6,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x6420f9e6, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ [id: 0x77dfab41,  HANDSHAKEN: protocol:TLSv1.3 cipher suite:TLS_AES_256_GCM_SHA384
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s0][generic][T#2]]] setting initial configuration to VotingConfiguration{7-9q77d_QyOl7eaO7Pyg0A,7ff_2y7VTEGUkOFoegIkJQ}
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x720d0369, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x720d0369, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe87e3905, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x720d0369, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ wrapping outbound message
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x87e4acc1, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x87e4acc1, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x87e4acc1, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x21aae452, )
[node_s0][masterService#updateTask][T#1]]] elected-as-master ([2] nodes joined)[{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0} elect leader, {node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0} elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 1, version: 1, reason: master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0},}
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ in channelRead, invoking callDecode
[node_s1][ wrapping outbound message
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x5aecf5fc, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ propagating ctx = ChannelHandlerContext(hba, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x5aecf5fc, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][generic][T#1]]] cluster UUID set to [fe_tFinvT4Ou9jchE-u9eA]
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][generic][T#4]]] cluster UUID set to [fe_tFinvT4Ou9jchE-u9eA]
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][clusterApplierService#updateTask][T#1]]] master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0},}, term: 1, version: 1, reason: ApplyCommitRequest{term=1, version=1, sourceNode={node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}}
[2021-12-22T10:58:52,711][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#2]]] started
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][clusterApplierService#updateTask][T#1]]] master node changed {previous [], current [{node_s0}{7-9q77d_QyOl7eaO7Pyg0A}{bEjXaUScTkyq_gdFJU8Ctg}{127.0.0.1}{127.0.0.1:50868}{http_address=0.0.0.0:0}]}, added {{node_s1}{7ff_2y7VTEGUkOFoegIkJQ}{f1tOJzW3SIupRcyIv4oxeg}{127.0.0.1}{127.0.0.1:50867}{http_address=0.0.0.0:0},}, term: 1, version: 1, reason: Publication{term=1, version=1}
[2021-12-22T10:58:52,719][INFO ][o.e.n.Node               ] [[test_SUITE-TEST_WORKER_VM=[11]-CLUSTER_SEED=[2117964283670784249]-HASH=[862F7478D49]-cluster[T#1]]] started
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x87e4acc1, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x77dfab41, )
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe87e3905, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x77dfab41, )
[node_s1][ wrapping outbound message
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x381b15d8, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][masterService#updateTask][T#1]]] recovered [0] indices into cluster_state
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x1900e373, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xdc499bd3, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xdc499bd3, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xdc499bd3, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xdc499bd3, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x1900e373, )
[node_s0][masterService#updateTask][T#1]]] adding template [random_index_template] for index patterns [*]
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0xd60b529f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xd60b529f, )
[node_s1][ wrapping outbound message
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x3e1b078e, )
[2021-12-22T10:58:53,069][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] [SSLTrustedZoneITest#test_switch_to_plaintext_enabled_downgrades_to_plaintext]: all set up test
[2021-12-22T10:58:53,499][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] [SSLTrustedZoneITest#test_switch_to_plaintext_enabled_downgrades_to_plaintext]: cleaning up after test
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x89b87417, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0xe309d901, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe309d901, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xe309d901, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0xe309d901, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ node localhost got a plaintext response from 127.0.0.1
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x89b87417, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x8db3243a, )
[node_s0][ in channelRead, invoking callDecode
[node_s0][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ SSL switch to plaintext enabled, node localhost switching from SSL to plaintext
[node_s0][ in handlerRemoved, STATE_HANDLER_REMOVED_PENDING, update state and return
[node_s0][ sslhandler state after removal: 264,  STATE_FIRE_CHANNEL_READ true STATE_NEEDS_FLUSH false
[node_s0][ propagating ctx = ChannelHandlerContext(hba, [id: 0x9d6db6fd, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x9d6db6fd, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x9d6db6fd, )
[node_s0][ in decodeRemovalReentryProtection finally, removePending is true, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x9d6db6fd, )
[node_s0][ in handlerRemoved, no readable bytes, releasing cumulation
[node_s0][ server-ssl-handler: in handlerRemoved0
[node_s0][ server-ssl-handler: sslClosePromise is not done in handlerRemoved0
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s1][ in channelRead, invoking callDecode
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ in channelRead, invoking callDecode
[node_s1][ unwrap inbound ssl records, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fire read from unwrap ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s0][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x5aecf5fc, )
[node_s1][ WRITE in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x51cf4a7a, )
[node_s1][ wrapping outbound message
[node_s1][ in decodeRemovalReentryProtection finally, removePending is false, ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s1][ fireChannelReadComplete ctx ChannelHandlerContext(server_ssl_handler, [id: 0x51cf4a7a, )
[node_s0][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0xa2b55a9d, )
[node_s1][ READ in the last dispatcher handler ChannelHandlerContext(dispatcher, [id: 0x2aed9f0f, )
[2021-12-22T10:59:00,815][INFO ][i.c.i.SSLTrustedZoneITest] [[Time-limited test]] after test